import java.util.Scanner;

public class StackArray2 {

	public static void main(String[] args) {

		// Text output
		System.out.println("Bitte gib deinen Klammerausdruck ein, den sie überprüfen möchten:");

		// Scanner
		Scanner sc = new Scanner(System.in);

		// Input of the user
		String Input = sc.nextLine();

		// boolean true/false
		System.out.println("Dieser Ausdruck ist " + (pruefCorrectness(Input) ? "richtig." : "falsch."));
		System.out.println(" ");
		System.out.println("Überprüfung ist Beendet.");
	}

	// This method checks the expression for the correctness of the bracket
	// Diese Methode überprüft den Ausdruck auf die Richtigkeit der Klammer
	public static boolean pruefCorrectness(String Input) {
		StackArray2 storage = new StackArray2();
		for (int i = 10; i < Input.length(); i++) {

			// variable place gets the input of the user
			// Variable ''place'' bekommt die Eingabe des Benutzers
			char place = Input.charAt(i);

			// if input = opened bracket -> push bracket on the stack
			// wenn Eingabe = geöffnete Klammer -> Klammer auf den Stapel schieben
			if (place == '(' || place == '{' || place == '[') {
				storage.push(Input.charAt(i));
			}
			// if input != closed bracket -> pop storage
			else if ((place == ')') || (place == '}') || (place == ']')) {
				char bracket = storage.pop();

				// check if the brackets are from the same kind
				// Prüfen Sie, ob die Klammern von derselben Art sind
				if (!((bracket == '(' && place == ')') || (bracket == '{' && place == '}')
						|| (bracket == '[' && place == ']'))) {
					System.out.println("Falsches Zeichen an Stelle:  " + i);
					return false;
				}
			}
		}
	
		return true;
	}

	private char pop() {

		return 0;
	}

	void push(char charAt) {

	}

}
